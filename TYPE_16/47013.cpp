/*
Алгоритм вычисления значения функции F(n), где n — целое неотрицательное число, задан следующими соотношениями:
F(0) = 0;
F(n) = F(n - 1) + 1, если n нечётно;
F(n) = F(n / 2), если n > 0 и при этом n чётно.
 
Укажите количество таких значений n < 1 000 000 000, для которых F(n) = 3.
.1....1....1....
c(30, 3) = 30! / (27! * 3!) = 30 * 29 * 28 / 6

*/
#include <iostream>
using namespace std;

int f(int n){
    if (n == 0)
        return 0;
    if (n % 2 == 1)
        return 1 + f(n - 1);
    return f(n / 2);
}

int main() {
    int cnt = 0;
    for (int n = 0; n < 1000000000; n++){
        if (f(n) == 3) {
            cnt += 1;
            cout << cnt << endl;
        }
    }
    cout << "end " << cnt <<endl;
    return 0;
}